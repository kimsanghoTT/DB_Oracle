--`DEPT_CODE`가 'D5'가 아닌 사원의 이름과 부서 코드
SELECT EMP_NAME, DEPT_CODE FROM EMPLOYEE WHERE DEPT_CODE != 'D5';

--`SALARY`가 3000000보다 크지 않은 사원의 이름과 급여
SELECT EMP_NAME, SALARY FROM EMPLOYEE WHERE SALARY < '3000000';

--`JOB_CODE`가 'J3'가 아닌 사원의 이름과 직무 코드
SELECT EMP_NAME, JOB_CODE FROM EMPLOYEE WHERE JOB_CODE != 'J3';

--`BONUS`가 0.1이 아닌 사원의 이름과 보너스
SELECT EMP_NAME, BONUS FROM EMPLOYEE WHERE BONUS != '0.1';

--`MANAGER_ID`가 200이 아닌 사원의 이름과 매니저 ID
SELECT EMP_NAME, MANAGER_ID FROM EMPLOYEE WHERE MANAGER_ID != '200';

--`EMAIL`이 없는 사원의 이름과 이메일
SELECT EMP_NAME, EMAIL FROM EMPLOYEE WHERE EMAIL IS NULL;

--`PHONE`이 없는 사원의 이름과 전화번호
SELECT EMP_NAME,PHONE FROM EMPLOYEE WHERE PHONE IS NULL;

--`BONUS`가 없는 사원의 이름과 보너스
SELECT EMP_NAME, BONUS FROM EMPLOYEE WHERE BONUS IS NULL;

--`MANAGER_ID`가 없는 사원의 이름과 매니저 ID
SELECT EMP_NAME, MANAGER_ID FROM EMPLOYEE WHERE MANAGER_ID IS NULL;

--`ENT_DATE`가 없는 사원의 이름과 종료일
SELECT EMP_NAME, ENT_DATE FROM EMPLOYEE WHERE ENT_DATE IS NULL;

--`EMAIL`이 있는 사원의 이름과 이메일
SELECT EMP_NAME, EMAIL FROM EMPLOYEE WHERE EMAIL IS NOT NULL;

--`PHONE`이 있는 사원의 이름과 전화번호
SELECT EMP_NAME, PHONE FROM EMPLOYEE WHERE PHONE IS NOT NULL;

--`BONUS`가 있는 사원의 이름과 보너스
SELECT EMP_NAME, bonus FROM EMPLOYEE WHERE bonus IS NOT NULL;

--`MANAGER_ID`가 있는 사원의 이름과 매니저 ID
SELECT EMP_NAME, manager_id FROM EMPLOYEE WHERE manager_id IS NOT NULL;

--`ENT_DATE`가 있는 사원의 이름과 종료일
SELECT EMP_NAME, ent_date FROM EMPLOYEE WHERE ent_date IS NOT NULL;

--`SALARY`가 2000000에서 3000000 사이인 사원의 이름과 급여
SELECT EMP_NAME, salary FROM EMPLOYEE WHERE salary between '2000000' and '3000000';

--`HIRE_DATE`가 2000년 1월 1일부터 2010년 12월 31일 사이인 사원의 이름과 입사일
SELECT EMP_NAME, hire_date FROM EMPLOYEE WHERE hire_date between TO_DATE('2000-01-01', 'YYYY-MM-DD') and TO_DATE('2010-12-31', 'YYYY-MM-DD');

--`EMP_ID`가 210에서 220 사이인 사원의 이름과 ID
SELECT EMP_NAME, EMP_ID FROM EMPLOYEE WHERE EMP_ID between '210' and '220';

--`BONUS`가 0.1에서 0.3 사이인 사원의 이름과 보너스
SELECT EMP_NAME, BONUS FROM EMPLOYEE WHERE BONUS between '0.1' and '0.3';

--`SAL_LEVEL`이 'S3'에서 'S5' 사이인 사원의 이름과 급여 수준
SELECT EMP_NAME, salary FROM EMPLOYEE WHERE sal_level between 'S3' and 'S5';

--`SALARY`가 2000000에서 3000000 사이가 아닌 사원의 이름과 급여
SELECT EMP_NAME, salary FROM EMPLOYEE WHERE salary NOT between '2000000' and '3000000';

--`HIRE_DATE`가 2000년 1월 1일부터 2010년 12월 31일 사이가 아닌 사원의 이름과 입사일
SELECT EMP_NAME, hire_date FROM EMPLOYEE WHERE hire_date NOT between TO_DATE('2000-01-01', 'YYYY-MM-DD') and TO_DATE('2010-12-31', 'YYYY-MM-DD');

--`EMP_ID`가 210에서 220 사이가 아닌 사원의 이름과 ID
SELECT EMP_NAME, EMP_ID FROM EMPLOYEE WHERE EMP_ID NOT between '210' and '220';

--`BONUS`가 0.1에서 0.3 사이가 아닌 사원의 이름과 보너스
SELECT EMP_NAME, BONUS FROM EMPLOYEE WHERE BONUS NOT between '0.1' and '0.3';

--`SAL_LEVEL`이 'S3'에서 'S5' 사이가 아닌 사원의 이름과 급여 수준
SELECT EMP_NAME, salary FROM EMPLOYEE WHERE sal_level NOT between 'S3' and 'S5';

----------------------------------------------------------------------
CREATE TABLE TB_DEPARTMENT (
    DEPARTMENT_NO VARCHAR2(10 BYTE) NOT NULL PRIMARY KEY,
    DEPARTMENT_NAME VARCHAR2(20 BYTE) NOT NULL,
    CATEGORY VARCHAR2(20 BYTE),
    OPEN_YN CHAR(1),
    CAPACITY NUMBER
)

   COMMENT ON COLUMN "KH_T"."TB_DEPARTMENT"."DEPARTMENT_NO" IS '학과 번호';
   COMMENT ON COLUMN "KH_T"."TB_DEPARTMENT"."DEPARTMENT_NAME" IS '학과 이름';
   COMMENT ON COLUMN "KH_T"."TB_DEPARTMENT"."CATEGORY" IS '계열';
   COMMENT ON COLUMN "KH_T"."TB_DEPARTMENT"."OPEN_YN" IS '개설 여부';
   COMMENT ON COLUMN "KH_T"."TB_DEPARTMENT"."CAPACITY" IS '정원';
   
-----------------------------------------------------------------------
CREATE TABLE TB_STUDENT (
    STUDENT_NO VARCHAR2(10 BYTE) NOT NULL PRIMARY KEY,
    DEPARTMENT_NO VARCHAR2(10 BYTE) NOT NULL,
    STUDENT_NAME VARCHAR2(30 BYTE) NOT NULL,
    STUDENT_SSN VARCHAR2(14 BYTE),
    STUDENT_ADDRESS VARCHAR2(100 BYTE),
    ENTRANCE_DATE DATE,
    ABSENCE_YN CHAR(1),
    COACH_PROFESSOR_NO VARCHAR2(10),
    FOREIGN KEY(DEPARTMENT_NO) REFERENCES TB_DEPARTMENT (DEPARTMENT_NO),
    FOREIGN KEY(COACH_PROFESSOR_NO) REFERENCES TB_PROFESSOR (PROFESSOR_NO)
)

   COMMENT ON COLUMN "KH_T"."TB_STUDENT"."STUDENT_NO" IS '학생 번호';
   COMMENT ON COLUMN "KH_T"."TB_STUDENT"."DEPARTMENT_NO" IS '학과 번호';
   COMMENT ON COLUMN "KH_T"."TB_STUDENT"."STUDENT_NAME" IS '학생 이름';
   COMMENT ON COLUMN "KH_T"."TB_STUDENT"."STUDENT_SSN" IS '학생 주민번호';
   COMMENT ON COLUMN "KH_T"."TB_STUDENT"."STUDENT_ADDRESS" IS '학생 주소';
   COMMENT ON COLUMN "KH_T"."TB_STUDENT"."ENTRANCE_DATE" IS '입학 일자';
   COMMENT ON COLUMN "KH_T"."TB_STUDENT"."ABSENCE_YN" IS '휴학 여부';
   COMMENT ON COLUMN "KH_T"."TB_STUDENT"."COACH_PROFESSOR_NO" IS '지도 교수 번호';
------------------------------------------------------------------------
CREATE TABLE TB_CLASS (
    CLASS_NO VARCHAR2(10 BYTE) NOT NULL PRIMARY KEY,
    DEPARTMENT_NO VARCHAR2(10 BYTE) NOT NULL,
    PREATTENDING_CLASS_NO VARCHAR2(10 BYTE),
    CLASS_NAME VARCHAR2(30 BYTE) NOT NULL,
    CLASS_TYPE VARCHAR2(10 BYTE),
    FOREIGN KEY (DEPARTMENT_NO) REFERENCES TB_DEPARTMENT (DEPARTMENT_NO)
)

   COMMENT ON COLUMN "KH_T"."TB_CLASS"."CLASS_NO" IS '과목 번호';
   COMMENT ON COLUMN "KH_T"."TB_CLASS"."DEPARTMENT_NO" IS '학과 번호';
   COMMENT ON COLUMN "KH_T"."TB_CLASS"."PREATTENDING_CLASS_NO" IS '선수 과목 번호';
   COMMENT ON COLUMN "KH_T"."TB_CLASS"."CLASS_NAME" IS '과목 이름';
   COMMENT ON COLUMN "KH_T"."TB_CLASS"."CLASS_TYPE" IS '과목 구분';
-------------------------------------------------------------------------
CREATE TABLE TB_CLASS_PROFESSOR(
    CLASS_NO VARCHAR2(10 BYTE) NOT NULL,
    PROFESSOR_NO VARCHAR2(10 BYTE) NOT NULL,
    FOREIGN KEY (CLASS_NO) REFERENCES TB_CLASS (CLASS_NO),
    FOREIGN KEY(PROFESSOR_NO) REFERENCES TB_PROFESSOR (PROFESSOR_NO),
    PRIMARY KEY(CLASS_NO, PROFESSOR_NO)
)
   COMMENT ON COLUMN "KH_T"."TB_CLASS_PROFESSOR"."CLASS_NO" IS '과목 번호';
   COMMENT ON COLUMN "KH_T"."TB_CLASS_PROFESSOR"."PROFESSOR_NO" IS '교수 번호';
--------------------------------------------------------------------------
CREATE TABLE TB_PROFESSOR(
    PROFESSOR_NO VARCHAR2(10 BYTE) NOT NULL PRIMARY KEY,
    PROFESSOR_NAME VARCHAR2(30 BYTE) NOT NULL,
    PROFESSOR_SSN VARCHAR2(14 BYTE),
    PROFESSOR_ADDRESS VARCHAR2(100 BYTE),
    DEPARTMENT_NO VARCHAR2(10 BYTE),
    FOREIGN KEY (DEPARTMENT_NO) REFERENCES TB_DEPARTMENT (DEPARTMENT_NO)
)
    COMMENT ON COLUMN "KH_T"."TB_PROFESSOR"."PROFESSOR_NO" IS '교수 번호';
    COMMENT ON COLUMN "KH_T"."TB_PROFESSOR"."PROFESSOR_NAME" IS '교수 이름';
    COMMENT ON COLUMN "KH_T"."TB_PROFESSOR"."PROFESSOR_SSN" IS '교수 주민번호';
    COMMENT ON COLUMN "KH_T"."TB_PROFESSOR"."PROFESSOR_ADDRESS" IS '교수 주소';
    COMMENT ON COLUMN "KH_T"."TB_PROFESSOR"."DEPARTMENT_NO" IS '학과 번호';
-----------------------------------------------------------------------
CREATE TABLE TB_GRADE(
    TERM_NO VARCHAR2(10 BYTE) NOT NULL,
    CLASS_NO VARCHAR2(10 BYTE) NOT NULL,
    STUDENT_NO VARCHAR2(14 BYTE) NOT NULL,
    POINT NUMBER(3,2),
    FOREIGN KEY (CLASS_NO) REFERENCES TB_CLASS (CLASS_NO),
    FOREIGN KEY (STUDENT_NO) REFERENCES TB_STUDENT (STUDENT_NO),
    PRIMARY KEY(TERM_NO, CLASS_NO, STUDENT_NO)
)
    COMMENT ON COLUMN "KH_T"."TB_GRADE"."TERM_NO" IS '학기 번호';
    COMMENT ON COLUMN "KH_T"."TB_GRADE"."CLASS_NO" IS '과목 번호';
    COMMENT ON COLUMN "KH_T"."TB_GRADE"."STUDENT_NO" IS '학생 번호';
    COMMENT ON COLUMN "KH_T"."TB_GRADE"."POINT" IS '학점';




   